//再来一题
//求用1分、2分、3分的邮票贴出不同数值的方案数：（每张邮票的数量是无限的）
//那么
//1分：(1+x^1+x^2+x^3+x^4+......)
//2分：(1+x^2+x^4+x^6+x^8+......)
//3分：(1+x^3+x^6+x^9+x^12+......)
//然后这3个乘起来（让电脑去乘吧）
//对于这种无限的，题目肯定会给你他询问的数值的范围，计算到最大的范围就可以了
#include<cstdio>
typedef long long LL;
const int N = 100 + 5;//假如题目只问到100为止
const int MAX = 3;//题目只有1,2,3这3种邮票 
LL c1[N], c2[N];//c2是临时合并的多项式，c1是最终合并的多项式 
int n;
void init(){
    c1[0] = 1;//一开始0的情况算一种 
    for(int i = 1; i <= MAX; i ++){//把1分到MAXN的邮票合并，变成一个多项式 
        for(int j = 0; j < N; j += i){//i分的邮票，步长是i
            for(int k = 0; j + k < N; k ++){//从x^0到x^N遍历一遍 
                c2[j + k] += c1[k];//因为j的所有项系数为1，所以c1[k]可以看成c1[k]*1;
            }
        }
        for(int j = 0; j < N; j ++){//把c2的数据抄到c1，清空c2 
            c1[j] = c2[j];
            c2[j] = 0;
        }
    }
}
int main(){
    init();
    while(scanf("%d", &n) != EOF){
        printf("%I64d\n", c1[n]);
    }
}